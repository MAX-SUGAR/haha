
    1、回到顶部按钮
    2、图片预加载
    3、判断图片是否加载完
    4、自动修补破损图像
    5、Hover切换class类
    6、禁用输入
    7、停止正在加载的链接
    8、toggle fade/slide
    9、简单的手风琴
    10、使两个DIV同等高度
    11、在浏览器标签/新窗口打开外部链接
    12、根据文本获取元素
    13、可见变化的触发
    14、Ajax调用错误处理
    15、链式操作
    
一、回到顶部按钮！利用jQuery里的animate和scrollTop方法，你便不需要使用插件创建简单的滚动到顶部动画。
// Back to top
$('.top').click(function (e) {
  e.preventDefault();
  $('html, body').animate({scrollTop: 0}, 800);
});
<!-- Create an anchor tag -->
<a class="top" href="#">Back to top</a>
通过scrollTop的值来改变你想要滚动到的位置。其实你就是做了：在接下来的800毫秒中让页面滚动，直到它滚动到文档的顶部。


二、图片预加载！如果你的网页使用了很多隐藏图片文件（例如：鼠标悬停展示的图片），那么图片的预加载是有意义的：
$.preloadImages = function () {
  for (var i = 0; i < arguments.length; i++) {
    $('<img>').attr('src', arguments[i]);
  }
};

$.preloadImages('img/hover-on.png', 'img/hover-off.png');


三、判断图片是否加载完！有时候你可能需要检查图像是否已经加载完成，以便于可以继续执行相应的js代码：
$('img').load(function () {
  console.log('image load successful');
});
你还可以检查一个特定的图片是否加载完并且被带有Id或者class的<img>标签代替。


四、自动修补破损图像！如果你碰巧发现在你的网站上发现破损的图像链接，一个个去替代他们是痛苦的。这个简单的代码可以节省很多的麻烦：
$('img').on('error', function () {
  if(!$(this).hasClass('broken-image')) {
    $(this).prop('src', 'img/broken.png').addClass('broken-image');
  }
});
即使你没有任何断开的链接，加入这代码也不会有任何影响。


五、Hover切换class类！比方说，当用户将鼠标悬停在你页面上的元素时，你想改变其视觉效果。当用户鼠标悬停在元素上，你可以在该元素上添加一个class类，当鼠标停止悬停事件时移除此class类：
$('.btn').hover(function () {
  $(this).addClass('hover');
}, function () {
  $(this).removeClass('hover');
});
如果你想要一个更简单的方式使用toggleClass方法，则仅仅需要添加必要的CSS：
$('.btn').hover(function () {
  $(this).toggleClass('hover');
});
备注：CSS在这种情况下使用是一个快速的解决方案，但要知道这点知识依旧是值得去了解下的。


六、禁用输入！有时你可能需要用表单的提交按钮或者某个输入框直到用户执行了某个动作（比如：检查“我已阅读条款”复选框）。在你的输入框上设置disabled属性，然后当你需要的时候启用该属性：
$('input[type="submit"]').prop('disabled', true);
你需要做的只是需要在输入框上再次运行prop方法，但设置的被禁用值是false：
$('input[type="submit"]').prop('disabled', false);


七、停止正在加载的链接！有时你不想链接到特定的网页或者重新载入页面；你可能想让他们做一些其他事情，如触发一些其他的脚本。这是防止违约行动的技巧：
$('a.no-link').click(function (e) {
  e.preventDefault();
});
